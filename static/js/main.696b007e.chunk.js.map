{"version":3,"sources":["Note.js","Board.js","reportWebVitals.js","index.js"],"names":["Note","props","componentWillMount","style","right","randomBetween","window","innerWidth","top","innerHeight","x","y","s","Math","ceil","random","edit","setState","editing","delete","id","onRemove","save","onChange","refs","newText","value","renderForm","className","ref","onClick","renderDisplay","children","state","this","React","Component","Board","nextID","uniqueId","add","text","notes","note","update","map","remove","filter","eachNote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA2DeA,E,kDAtDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,mBAAqB,WACnB,EAAKC,MAAQ,CACXC,MAAO,EAAKC,cAAc,EAAGC,OAAOC,WAAa,IAAK,MACtDC,IAAK,EAAKH,cAAc,EAAGC,OAAOG,YAAc,IAAK,QAVtC,EAanBJ,cAAgB,SAACK,EAAGC,EAAGC,GACrB,OAAOF,EAAIG,KAAKC,KAAKD,KAAKE,UAAYJ,EAAID,IAAME,GAd/B,EAgBnBI,KAAO,WACL,EAAKC,SAAS,CAAEC,SAAS,KAjBR,EAmBnBC,OAAS,SAACC,GACR,EAAKnB,MAAMoB,SAAS,EAAKpB,MAAMmB,KApBd,EAsBnBE,KAAO,WACL,EAAKrB,MAAMsB,SAAS,EAAKC,KAAKC,QAAQC,MAAO,EAAKzB,MAAMmB,IACxD,EAAKH,SAAS,CAAEC,SAAS,KAxBR,EA0BnBS,WAAa,WACX,OACE,sBAAKC,UAAU,OAAOzB,MAAO,EAAKA,MAAlC,UACE,0BAAU0B,IAAI,YACd,wBAAQC,QAAS,EAAKR,KAAtB,sBA9Ba,EAkCnBS,cAAgB,WACd,OACE,sBAAKH,UAAU,OAAOzB,MAAO,EAAKA,MAAlC,UACE,4BAAI,EAAKF,MAAM+B,WACf,iCACE,wBAAQF,QAAS,EAAKd,KAAtB,kBACA,wBAAQc,QAAS,EAAKX,OAAtB,sBAtCN,EAAKc,MAAQ,CACXf,SAAS,GAHM,E,qDA8CjB,OACE,cAAC,IAAD,UACGgB,KAAKD,MAAMf,QAAUgB,KAAKP,aAAeO,KAAKH,sB,GAjDpCI,IAAMC,WCqDVC,E,kDApDb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAKRqC,OAAS,WAEP,OADA,EAAKC,SAAW,EAAKA,UAAY,EAC1B,EAAKA,YARK,EAUnBC,IAAM,SAACC,GACL,IAAIC,EAAK,sBACJ,EAAKT,MAAMS,OADP,CAEP,CACEtB,GAAI,EAAKkB,SACTK,KAAMF,KAGV,EAAKxB,SAAS,CAAEyB,WAlBC,EAoBnBE,OAAS,SAACnB,EAASL,GACjB,IAAIsB,EAAQ,EAAKT,MAAMS,MAAMG,KAAI,SAACF,GAAD,OAC/BA,EAAKvB,KAAOA,EAAKuB,EAAjB,2BAA6BA,GAA7B,IAAmCA,KAAMlB,OAE3C,EAAKR,SAAS,CAAEyB,WAxBC,EA0BnBI,OAAS,SAAC1B,GACR,IAAIsB,EAAQ,EAAKT,MAAMS,MAAMK,QAAO,SAACJ,GAAD,OAAUA,EAAKvB,KAAOA,KAC1D,EAAKH,SAAS,CAAEyB,WA5BC,EA8BnBM,SAAW,SAACL,GACV,OACE,cAAC,EAAD,CAEEvB,GAAIuB,EAAKvB,GACTG,SAAU,EAAKqB,OACfvB,SAAU,EAAKyB,OAJjB,SAMGH,EAAKA,MALDA,EAAKvB,KA/Bd,EAAKa,MAAQ,CACXS,MAAO,IAHQ,E,qDA0CT,IAAD,OACP,OACE,sBAAKd,UAAU,QAAf,UACGM,KAAKD,MAAMS,MAAMG,IAAIX,KAAKc,UAC3B,wBAAQlB,QAAS,kBAAM,EAAKU,OAA5B,sB,GA/CYL,IAAMC,WCQXa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.696b007e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n    };\n  }\n\n  componentWillMount = () => {\n    this.style = {\n      right: this.randomBetween(0, window.innerWidth - 150, \"px\"),\n      top: this.randomBetween(0, window.innerHeight - 150, \"px\"),\n    };\n  };\n  randomBetween = (x, y, s) => {\n    return x + Math.ceil(Math.random() * (y - x)) + s;\n  };\n  edit = () => {\n    this.setState({ editing: true });\n  };\n  delete = (id) => {\n    this.props.onRemove(this.props.id);\n  };\n  save = () => {\n    this.props.onChange(this.refs.newText.value, this.props.id);\n    this.setState({ editing: false });\n  };\n  renderForm = () => {\n    return (\n      <div className=\"note\" style={this.style}>\n        <textarea ref=\"newText\"></textarea>\n        <button onClick={this.save}>Save</button>\n      </div>\n    );\n  };\n  renderDisplay = () => {\n    return (\n      <div className=\"note\" style={this.style}>\n        <p>{this.props.children}</p>\n        <span>\n          <button onClick={this.edit}>Edit</button>\n          <button onClick={this.delete}>X</button>\n        </span>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <Draggable>\n        {this.state.editing ? this.renderForm() : this.renderDisplay()}\n      </Draggable>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Note from \"./Note.js\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n  }\n  nextID = () => {\n    this.uniqueId = this.uniqueId || 0;\n    return this.uniqueId++;\n  };\n  add = (text) => {\n    var notes = [\n      ...this.state.notes,\n      {\n        id: this.nextID(),\n        note: text,\n      },\n    ];\n    this.setState({ notes });\n  };\n  update = (newText, id) => {\n    var notes = this.state.notes.map((note) =>\n      note.id !== id ? note : { ...note, note: newText }\n    );\n    this.setState({ notes });\n  };\n  remove = (id) => {\n    var notes = this.state.notes.filter((note) => note.id !== id);\n    this.setState({ notes });\n  };\n  eachNote = (note) => {\n    return (\n      <Note\n        key={note.id}\n        id={note.id}\n        onChange={this.update}\n        onRemove={this.remove}\n      >\n        {note.note}\n      </Note>\n    );\n  };\n  render() {\n    return (\n      <div className=\"board\">\n        {this.state.notes.map(this.eachNote)}\n        <button onClick={() => this.add()}>+</button>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}